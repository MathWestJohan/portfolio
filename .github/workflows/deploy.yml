name: CI/CD Pipeline for Kubernetes Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --watchAll=false

      - name: Build App
        run: npm run build

      - name: Build Docker image
        run: |
          docker build -t europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502-portfolio/my-app:${{ github.sha }} .
          docker tag europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502-portfolio/my-app:${{ github.sha }} europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502-portfolio/my-app:latest

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker europe-north1-docker.pkg.dev

      - name: Push Docker image to Google Container Registry
        run: |
          docker push europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502-portfolio/my-app:${{ github.sha }}
          docker push europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502-portfolio/my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
          install_components: 'gke-gcloud-auth-plugin'

      - name: Configure kubectl
        run: |
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True
          gcloud container clusters get-credentials portfolio-cluster-1 --region europe-north1

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/my-app my-app=europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502_portfolio/my-app:${{ github.sha }}
          kubectl apply -f kubernetes/service.yaml

      - name: Verify Deployment
        run: kubectl rollout status deployment/my-app --timeout=300s

      - name: Verify Service
        run: |
          kubectl get service my-app-service
          curl http://$(kubectl get svc my-app-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

      - name: Debug on failure
        if: failure()
        run: |
          echo "Deployment failed. Fetching logs..."
          kubectl get pods
          kubectl describe pods
          kubectl logs -l app=my-app

      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed, rolling back..."
          kubectl rollout undo deployment/my-app
