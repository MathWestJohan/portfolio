name: CI/CD Pipeline for Kubernetes Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Cache Node Modules
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests
      - name: Run tests
        run: npm test -- --watchAll=false

      # Build the React App
      - name: Build App
        run: npm run build

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502-portfolio/my-app:${{ github.sha }} .
          docker tag europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502-portfolio/my-app:${{ github.sha }} europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502-portfolio/my-app:latest

      # Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Configure Docker for Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker europe-north1-docker.pkg.dev

      # Push Docker image to Artifact Registry
      - name: Push Docker image to Artifact Registry
        run: |
          docker push europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502-portfolio/my-app:${{ github.sha }}
          docker push europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/idata2502-portfolio/my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Set up gcloud SDK
      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
          install_components: 'gke-gcloud-auth-plugin'

      # Configure kubectl to access GKE cluster
      - name: Configure kubectl
        run: |
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True
          gcloud container clusters get-credentials portfolio-cluster --region europe-north1

      # Update deployment.yaml with new image tag
      - name: Update Deployment with New Image Tag
        run: |
          sed -i "s|PLACEHOLDER_TAG|${{ github.sha }}|g" kubernetes/deployment.yaml

      # Apply deployment.yaml to the cluster
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/deployment.yaml

      # Ensure rollout is complete
      - name: Ensure rollout is complete
        run: |
          kubectl rollout status deployment/my-app --timeout=300s

      # Rollback if deployment fails
      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed, rolling back..."
          kubectl rollout undo deployment/my-app
      # Make Smoke Test executable
      - name: Make smoke-test.sh executable
        run: chmod +x ./scripts/smoke-test.sh

       # Run Smoke Test
      - name: Run Smoke Test
        run: ./scripts/smoke-test.sh